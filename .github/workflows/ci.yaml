#
# Copyright (c) 2020 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
name: CI
# Trigger the workflow on push
on:
  push:
    branches:
      - master
jobs:
  # PhantomJS is not very stable to run in docker.
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      name: Checkout che-dashboard source code
    - uses: actions/setup-node@v1
      name: Configuring nodejs 8.x version
      with:
        node-version: '8.x'
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install
      run: yarn install --ignore-optional
    - name: Build
      run: yarn build
    - name: Test
      run: yarn test
  docker-build:
    runs-on: ubuntu-latest
    env:
      IMAGE_FULL: quay.io/eclipse/che-dashboard:next
      CACHE_IMAGE_FULL: docker.io/cheincubator/che-dashboard:cache
    steps:
    - uses: actions/checkout@v2
      name: Checkout che-dashboard source code
    - name: Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v1.4.0
      with:
        version: v0.3.1
    - name: "Docker prepare"
      run: docker image prune -a -f
    - name: "Docker Quay.io Login"
      run:  docker login -u "${{ secrets.QUAY_USERNAME }}" -p "${{ secrets.QUAY_PASSWORD }}" quay.io
    - name: "Docker docker.io Login"
      run:  docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_PASSWORD }}" docker.io
    - name: "Docker build"
      run: docker buildx build --platform linux/amd64 --cache-from="type=registry,ref=${CACHE_IMAGE_FULL}" --cache-to="type=registry,ref=${CACHE_IMAGE_FULL},mode=max" -t ${IMAGE_FULL}  -f apache.Dockerfile --push .
    - name: "Docker Logout"
      run: docker logout
