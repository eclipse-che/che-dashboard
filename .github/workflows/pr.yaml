#
# Copyright (c) 2020 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: PR

on:
  pull_request:
    branches: [master]

env:
  DIR_DASHBOARD: che-dashboard
  DIR_CHE: che
  IMAGE_VERSION: che-dashboard-pull-${{ github.event.pull_request.number }}
  ORGANIZATION: docker.io/maxura

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
      -
        name: "Checkout Che Dashboard source code"
        uses: actions/checkout@v2
      -
        name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: "Install dependencies"
        run: yarn
      -
        name: "Build"
        run: yarn compile
      -
        name: "Run unit tests"
        run: yarn test --runInBand

  test-coverage-diff:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      -
        name: "Checkout che-dashboard source code"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: "Use Node.js ${{ matrix.node-version }}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      -
        name: "Install dependencies"
        run: yarn
      -
        name: "Jest Coverage Diff"
        uses: anuraag016/Jest-Coverage-Diff@1.0
        with:
          fullCoverageDiff: false

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.default == false }}
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64]
        default: [true]
        include:
          - platform: linux/arm64
            default: false
          - platform: linux/ppc64le
            default: false
          - platform: linux/s390x
            default: false
    steps:
      -
        name: "Checkout Che Dashboard source code"
        uses: actions/checkout@v2
        with:
          path: ${{ env.DIR_DASHBOARD }}
          ref: ${{ github.event.pull_request.head.sha }}
      -
        name: "Set up QEMU"
        uses: docker/setup-qemu-action@v1
      -
        name: "Set up Docker Buildx ${{ matrix.platform }}"
        uses: docker/setup-buildx-action@v1
      -
        name: "Cache Docker layers"
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: "Docker docker.io Login"
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_MAXURA_USERNAME }}
          password: ${{ secrets.DOCKERHUB_MAXURA_PASSWORD }}
      -
        name: "Build and push ${{ matrix.platform }}"
        uses: docker/build-push-action@v2
        with:
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ./${{ env.DIR_DASHBOARD }}
          file: ./${{ env.DIR_DASHBOARD }}/apache.Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ env.ORGANIZATION }}/che-dashboard:${{ env.IMAGE_VERSION }}

  che-server-build:
    needs: docker-build
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
    steps:
      -
        name: "Checkout Eclipse Che source code"
        uses: actions/checkout@v2
        with:
          repository: "eclipse/che"
          ref: master
          path: ${{ env.DIR_CHE }}
      -
        name: "Set up JDK 11"
        uses: actions/setup-java@v1
        with:
          java-version: 11
      -
        name: "Cache local Maven repository"
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      -
        name: "Maven build"
        run: |
          cd ${GITHUB_WORKSPACE}/${DIR_CHE} && mvn clean install -DskipTests
      -
        name: "Docker build"
        uses: nick-invision/retry@v1
        env:
          CHE_VERSION: next
        with:
          timeout_minutes: 100
          max_attempts: 5
          retry_wait_seconds: 60
          command: |
            bash ${GITHUB_WORKSPACE}/${DIR_CHE}/dockerfiles/che/build.sh --skip-tests --tag:${IMAGE_VERSION} --organization:${ORGANIZATION} --build-arg:"CHE_DASHBOARD_VERSION=${IMAGE_VERSION},CHE_DASHBOARD_ORGANIZATION=${ORGANIZATION},CHE_WORKSPACE_LOADER_VERSION=${CHE_VERSION}"
      -
        name: "Docker docker.io Login"
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_MAXURA_USERNAME }}
          password: ${{ secrets.DOCKERHUB_MAXURA_PASSWORD }}
      -
        name: "Docker push"
        run: |
          docker push ${ORGANIZATION}/che-server:${IMAGE_VERSION}
      -
        name: "Comment with image name"
        uses: actions/github-script@v3
        with:
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            const imageCheServer = '${{ env.ORGANIZATION }}/che-server:${{ env.IMAGE_VERSION }}';
            github.issues.createComment({ issue_number, owner, repo, body: 'Docker image build succeeded: **' + imageCheServer + '**' });
